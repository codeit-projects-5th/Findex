plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.codeit'
version = '0.0.1-SNAPSHOT'
description = 'findex'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "io.netty:netty-resolver-dns-native-macos:4.1.107.Final:osx-aarch_64" // macOS용
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // H2 Database (테스트/로컬용)
    runtimeOnly 'com.h2database:h2'

    // PostgreSQL JDBC 드라이버
    runtimeOnly 'org.postgresql:postgresql'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MapStruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

    //SnakeYAML 추가
    implementation 'org.yaml:snakeyaml:2.2'

    //WebClientConfig 설정 추가
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Apache Commons CSV
    implementation 'org.apache.commons:commons-csv:1.10.0'

    // QueryDSL (jakarta + JPA)
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
    querydsl 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api:2.1.1'
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl")

sourceSets {
    main {
        java {
            srcDirs += querydslDir
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.generatedSourceOutputDirectory.set(file("build/generated/querydsl"))
}

tasks.named('test') {
    useJUnitPlatform()
}
